[tool.poetry]
name = "drf-lessons-sept-2024"
version = "0.1.0"
description = "Django REST Framework lessons project"
authors = ["Vadim <pvs.versia@gmail.com>"]
readme = "README.md"
packages = [{include = "apps"}, {include = "config"}, {include = "core"}]


[tool.poetry.dependencies]
# =============================================================================
# CORE RUNTIME DEPENDENCIES (нужны в Docker)
# =============================================================================
python = ">=3.12,<3.13"

# Django Core
django = "^5.2.4"
djangorestframework = "^3.15.2"
djangorestframework-simplejwt = "^5.5.0"
django-filter = "^25.1"
django-cors-headers = "^4.7.0"
drf-yasg = "^1.21.10"
drf-spectacular = "^0.27.0"
django-ninja = "^1.4.3"

# Database
psycopg2 = "^2.9.10"

# Data Analysis & Visualization
pandas = "^2.1.4"
matplotlib = "^3.8.2"
seaborn = "^0.13.0"
numpy = "^2.2.0"
plotly = "^5.17.0"
# Экспорт отчетов
reportlab = "^4.0.0"
openpyxl = "^3.1.0"
# LLM интеграция
openai = "^1.3.0"

# WebSockets & Channels
channels = "^4.2.2"
channels-redis = "^4.2.1"
django-redis = "^6.0.0"
redis = "^5.0.0"
djangochannelsrestframework = "^1.3.0"
daphne = "^4.1.2"

# Task Queue
celery = "^5.4.0"
django-celery-beat = "^2.6.0"
pika = "^1.3.2"

# Configuration & Environment
python-dotenv = "^1.0.0"
pytz = "^2025.2"

# Validation & Serialization
pydantic = {extras = ["email"], version = "^2.10.6"}
orjson = "^3.10.12"

# HTTP & Networking
requests = "^2.32.3"
httpx = "^0.28.1"

# OAuth2 Provider
django-oauth-toolkit = "^3.0.0"

# Security & Crypto
cryptography = "^44.0.2"
pycryptodomex = "^3.23.0"
django-ratelimit = "^4.1.0"

# File Processing & Media
pillow = "^10.4.0"
lxml = "^5.2.2"
beautifulsoup4 = "^4.12.3"
markdown = "^3.6"
chardet = "^5.2.0"
python-dateutil = "^2.9.0.post0"
dateparser = "^1.2.2"

# AI & LangChain (для чат-агента)
g4f = "^0.5.1.5"
langgraph = "^0.2.50"
langchain = "^0.3.10"
langchain-core = "^0.3.20"

# Logging
loguru = "^0.7.2"


# =============================================================================
# DEVELOPMENT DEPENDENCIES (НЕ нужны в Docker продакшене)
# =============================================================================
[tool.poetry.group.dev.dependencies]
# Code formatting & linting
black = "^24.10.0"
isort = "^5.13.2"
flake8 = "^7.1.1"
ruff = "^0.9.2"

# Type checking
types-urllib3 = "^1.26.25.14"
celery-stubs = "^0.1.3"
pandas-stubs = "^2.3.0.250703"

# Development tools
setuptools = "^77.0.3"
cffi = "^1.17.1"
wheel = "^0.45.1"

# =============================================================================
# OPTIONAL FEATURES (устанавливаются по необходимости)
# =============================================================================
[tool.poetry.group.analytics.dependencies]
# Data analysis (только если нужна аналитика)
pandas = "^2.2.2"
numpy = "^2.2.6"
matplotlib = "^3.10.3"
seaborn = "^0.13.2"

[tool.poetry.group.documents.dependencies]
# Document processing (только если нужна обработка документов)
PyPDF2 = "^3.0.1"
python-docx = "^1.0.1"
openpyxl = "^3.1.2"
rarfile = "^4.1"

[tool.poetry.group.ocr.dependencies]
# OCR capabilities (только если нужно распознавание текста)
pytesseract = "^0.3.10"

[tool.poetry.group.maps.dependencies]
# Maps integration (только если нужны карты)
googlemaps = "^4.10.0"

[tool.poetry.group.cloud.dependencies]
# Cloud storage (только если используется AWS S3)
boto3 = "^1.37.15"
django-storages = {extras = ["boto3"], version = "^1.14.5"}

[tool.poetry.group.scraping.dependencies]
# Web scraping (только если нужен скрапинг)
crawl4ai = ">=0.6.3,<0.7.0"
readability-lxml = "^0.8.4.1"
curl-cffi = "^0.11.4"

[tool.poetry.group.interactive.dependencies]
# Interactive features (НЕ нужны в Docker)
keyboard = "^0.13.5"
inputimeout = "^1.0.4"

# Удаляем legacy зависимости для оптимизации Docker образа

[[tool.poetry.source]]
name = "tsinghua"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"
priority = "primary"

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
known_third_party = [
    "fastapi",
    "requests",
    "uvicorn",
    "numpy",
    "pandas",
    "sqlalchemy",
    "pydantic",
    "starlette"
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

[tool.ruff.lint]
select = ["E", "F", "W", "C", "N", "B", "Q", "S", "I"]
ignore = ["E501", "S105"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
package-mode = false
