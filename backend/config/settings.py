"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.
For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# =============================================================================
# ENVIRONMENT LOADING
# =============================================================================

# Determine environment type
is_docker = os.environ.get("IS_DOCKER", "false").lower() == "true"
base_dir = Path(__file__).resolve().parent.parent  # backend directory
root_dir = base_dir.parent  # project root directory

# Optimized environment loading - —É—á–∏—Ç—ã–≤–∞–µ–º —Å—Ä–µ–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
# –°–ª–µ–¥—É–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ ENV_SETUP.md: base ‚Üí secrets ‚Üí (local|docker) ‚Üí service-specific
env_files = [
    root_dir / "env-config" / ".env.base",      # 1. –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    root_dir / "env-config" / ".env.secrets",   # 2. –°–µ–∫—Ä–µ—Ç—ã
]

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å—Ä–µ–¥—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç IS_DOCKER
if is_docker:
    env_files.append(root_dir / "env-config" / ".env.docker")  # 3. Docker –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
else:
    env_files.append(root_dir / "env-config" / ".env.local")   # 3. –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è

env_files.append(base_dir / ".env")  # 4. Backend-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –ø–æ –ø–æ—Ä—è–¥–∫—É (—Ñ–∞–π–ª—ã —Å–∞–º–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å—Ä–µ–¥—É)
for env_file in env_files:
    if env_file.exists():
        load_dotenv(env_file, override=True)

# =============================================================================
# CORE DJANGO SETTINGS
# =============================================================================

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", "django-insecure-fallback-key-for-development")

# =============================================================================
# –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø –ó–ê–ü–£–°–ö–ê
# =============================================================================

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "True").lower() in ("true", "1", "yes")
print(f"SETTINGS: DEBUG before extra_config = {DEBUG}")
print(f"SETTINGS: DEBUG env var = {os.environ.get('DEBUG', 'NOT_SET')}")

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '0.0.0.0', '*']

# Import all modular configurations early to avoid AppRegistryNotReady errors
from .extra_config import *  # noqa

# All other settings are imported from extra_config above

print(f"üîß SETTINGS: DEBUG –ü–û–°–õ–ï –∏–º–ø–æ—Ä—Ç–∞ extra_config = {DEBUG}")
print(f"üîß SETTINGS: ALLOWED_HOSTS = {ALLOWED_HOSTS}")
