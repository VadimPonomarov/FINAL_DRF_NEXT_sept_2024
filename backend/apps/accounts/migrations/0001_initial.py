# Generated by Django 5.2.4 on 2025-10-09 10:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AddsAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("BASIC", "Basic account"),
                            ("PREMIUM", "Premium account"),
                        ],
                        default="BASIC",
                        max_length=16,
                    ),
                ),
                (
                    "moderation_level",
                    models.CharField(
                        choices=[
                            ("LIGHT", "Light moderation"),
                            ("STRICT", "Strict moderation"),
                            ("AUTO", "Automated check only"),
                        ],
                        default="AUTO",
                        max_length=64,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("seller", "–ü—Ä–æ–¥–∞–≤–µ—Ü—å (–∑–≤–∏—á–∞–π–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)"),
                            ("dealer", "–ê–≤—Ç–æ—Å–∞–ª–æ–Ω"),
                            ("manager", "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ (staff)"),
                            ("admin", "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä (superuser)"),
                        ],
                        default="seller",
                        max_length=32,
                    ),
                ),
                ("organization_name", models.CharField(blank=True, max_length=255)),
                ("organization_id", models.UUIDField(blank=True, null=True)),
                ("stats_enabled", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "add_accounts",
            },
        ),
        migrations.CreateModel(
            name="AddsAccountContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("phone", "üìû Phone"),
                            ("email", "üìß Email"),
                            ("telegram", "üì≤ Telegram"),
                            ("whatsapp", "üí¨ WhatsApp"),
                            ("viber", "üì° Viber"),
                            ("instagram", "üì∏ Instagram"),
                            ("website", "üåê Website"),
                        ],
                        max_length=32,
                    ),
                ),
                ("value", models.CharField(max_length=256)),
                ("is_visible", models.BooleanField(default=True)),
                ("note", models.CharField(blank=True, max_length=128)),
            ],
            options={
                "db_table": "add_account_contacts",
                "ordering": ["type"],
            },
        ),
        migrations.CreateModel(
            name="DealershipEmployee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞"),
                            ("manager", "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º"),
                            ("mechanic", "–ú–µ—Ö–∞–Ω–∏–∫"),
                            ("sales", "–ü—Ä–æ–¥–∞–≤–µ—Ü"),
                        ],
                        help_text="–†–æ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–µ",
                        max_length=20,
                    ),
                ),
                ("can_create_ads", models.BooleanField(default=True)),
                ("can_edit_ads", models.BooleanField(default=True)),
                ("can_delete_ads", models.BooleanField(default=False)),
                ("can_manage_employees", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("hired_date", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞",
                "verbose_name_plural": "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–æ–≤",
                "db_table": "dealership_employees",
            },
        ),
        migrations.CreateModel(
            name="DealershipOrganization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "name",
                    models.CharField(
                        help_text="–ù–∞–∑–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞/–¥–∏–ª–µ—Ä—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞",
                        max_length=255,
                    ),
                ),
                (
                    "legal_name",
                    models.CharField(
                        blank=True,
                        help_text="–ü–æ–ª–Ω–æ–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
                        max_length=255,
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(
                        blank=True, help_text="–ù–∞–ª–æ–≥–æ–≤—ã–π –Ω–æ–º–µ—Ä (–ï–ì–†–ü–û–£)", max_length=50
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                (
                    "address",
                    models.TextField(
                        blank=True, help_text="–§–∏–∑–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞"
                    ),
                ),
                ("region", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False, help_text="–ü—Ä–æ—à–µ–ª –ª–∏ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é"
                    ),
                ),
                ("verification_date", models.DateTimeField(blank=True, null=True)),
                (
                    "max_ads",
                    models.PositiveIntegerField(
                        default=100,
                        help_text="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π",
                    ),
                ),
            ],
            options={
                "verbose_name": "–ê–≤—Ç–æ—Å–∞–ª–æ–Ω",
                "verbose_name_plural": "–ê–≤—Ç–æ—Å–∞–ª–æ–Ω—ã",
                "db_table": "dealership_organizations",
            },
        ),
        migrations.CreateModel(
            name="RawAccountAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "input_region",
                    models.CharField(
                        default="",
                        help_text="Region as entered by user (required for geocoding)",
                        max_length=255,
                    ),
                ),
                (
                    "input_locality",
                    models.CharField(
                        default="",
                        help_text="City/locality as entered by user (required for geocoding)",
                        max_length=255,
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Standardized region name (Google Maps, locale: uk)",
                        max_length=255,
                    ),
                ),
                (
                    "locality",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Standardized locality name (Google Maps, locale: uk)",
                        max_length=255,
                    ),
                ),
                (
                    "geo_code",
                    models.CharField(
                        db_index=True,
                        default="unknown",
                        help_text="Google Maps place_id for unique geographical identification and grouping",
                        max_length=128,
                    ),
                ),
                (
                    "latitude",
                    models.FloatField(
                        blank=True, help_text="Latitude for map display", null=True
                    ),
                ),
                (
                    "longitude",
                    models.FloatField(
                        blank=True, help_text="Longitude for map display", null=True
                    ),
                ),
                (
                    "is_geocoded",
                    models.BooleanField(
                        default=False, help_text="Whether geocoding was successful"
                    ),
                ),
                (
                    "geocoding_error",
                    models.TextField(
                        blank=True, help_text="Error message if geocoding failed"
                    ),
                ),
            ],
            options={
                "verbose_name": "Account Address",
                "verbose_name_plural": "Account Addresses",
                "db_table": "raw_account_addresses",
            },
        ),
    ]
