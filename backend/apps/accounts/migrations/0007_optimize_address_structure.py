# Generated by Django 5.2.1 on 2025-07-30 23:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0006_remove_unnecessary_fields_from_formatted_address'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='formattedaccountaddress',
            name='raw_address',
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='address_hash',
            field=models.CharField(blank=True, db_index=True, help_text='SHA-256 hash for grouping identical addresses', max_length=64),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='country_code',
            field=models.CharField(blank=True, help_text='ISO country code (e.g., UA)', max_length=8),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='geocoding_error',
            field=models.TextField(blank=True, help_text='Error message if geocoding failed'),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='is_geocoded',
            field=models.BooleanField(default=False, help_text='Whether address was successfully geocoded'),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='latitude',
            field=models.FloatField(blank=True, help_text='Latitude from Google Maps', null=True),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='longitude',
            field=models.FloatField(blank=True, help_text='Longitude from Google Maps', null=True),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='original_apartment',
            field=models.CharField(blank=True, help_text='Original apartment as entered by user', max_length=50),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='original_building',
            field=models.CharField(blank=True, help_text='Original building as entered by user', max_length=50),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='original_country',
            field=models.CharField(blank=True, help_text='Original country as entered by user', max_length=255),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='original_district',
            field=models.CharField(blank=True, help_text='Original district as entered by user', max_length=255),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='original_locality',
            field=models.CharField(blank=True, help_text='Original locality as entered by user', max_length=255),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='original_postal_code',
            field=models.CharField(blank=True, help_text='Original postal code as entered by user', max_length=50),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='original_region',
            field=models.CharField(blank=True, help_text='Original region as entered by user', max_length=255),
        ),
        migrations.AddField(
            model_name='rawaccountaddress',
            name='original_street',
            field=models.CharField(blank=True, help_text='Original street as entered by user', max_length=255),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='accounts.addsaccount'),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='apartment',
            field=models.CharField(blank=True, help_text='Apartment number (preserved from user input)', max_length=50),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='building',
            field=models.CharField(blank=True, help_text='Standardized building (Google Maps)', max_length=50),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='country',
            field=models.CharField(blank=True, help_text='Standardized country (Google Maps, locale: uk)', max_length=255),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='district',
            field=models.CharField(blank=True, help_text='Standardized district (Google Maps, locale: uk)', max_length=255),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='locality',
            field=models.CharField(blank=True, help_text='Standardized locality (Google Maps, locale: uk)', max_length=255),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='postal_code',
            field=models.CharField(blank=True, help_text='Standardized postal code (Google Maps)', max_length=50),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='region',
            field=models.CharField(blank=True, help_text='Standardized region (Google Maps, locale: uk)', max_length=255),
        ),
        migrations.AlterField(
            model_name='rawaccountaddress',
            name='street',
            field=models.CharField(blank=True, help_text='Standardized street (Google Maps, locale: uk)', max_length=255),
        ),
        migrations.AddIndex(
            model_name='rawaccountaddress',
            index=models.Index(fields=['address_hash'], name='raw_addr_hash_idx'),
        ),
        migrations.AddIndex(
            model_name='rawaccountaddress',
            index=models.Index(fields=['is_geocoded'], name='raw_addr_geocoded_idx'),
        ),
        migrations.AddIndex(
            model_name='rawaccountaddress',
            index=models.Index(fields=['country', 'region', 'locality'], name='raw_addr_location_idx'),
        ),
        migrations.DeleteModel(
            name='FormattedAccountAddress',
        ),
    ]
