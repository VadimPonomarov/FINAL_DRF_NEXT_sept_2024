"use client";

import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Alert, AlertDescription } from '@/components/ui/alert';
import {
  Plus,
  Edit,
  Trash2,
  Eye,
  BarChart3,
  RefreshCw,
  Car,
  Calendar,
  MapPin,
  DollarSign,
  AlertCircle,
  CheckCircle,
  Clock,
  XCircle,
  Heart,
  Phone
} from 'lucide-react';
import { useI18n } from '@/contexts/I18nContext';

// üöó –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ backend
interface CarAd {
  id: number;
  title: string;
  mark: {
    id: number;
    name: string;
  };
  model: {
    id: number;
    name: string;
  };
  year: number;
  price: number;
  currency: string;
  mileage_km: number;
  status: 'draft' | 'pending' | 'active' | 'needs_review' | 'rejected' | 'sold' | 'archived';
  is_validated: boolean;
  region: {
    id: number;
    name: string;
  };
  city: {
    id: number;
    name: string;
  };
  views_count?: number;
  created_at: string;
  updated_at: string;
  moderation_reason?: string;
}

// üìä –°—Ç–∞—Ç—É—Å—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å —ç–º–æ–¥–∑–∏
const STATUS_CONFIG = {
  draft: { label: 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫', color: 'bg-gray-500', description: '–ù–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ' },
  pending: { label: '‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏', color: 'bg-yellow-500', description: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–æ–π' },
  active: { label: '‚úÖ –ê–∫—Ç–∏–≤–Ω–æ', color: 'bg-green-500', description: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ –≤–∏–¥–Ω–æ –≤—Å–µ–º' },
  needs_review: { label: 'üëÄ –¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏', color: 'bg-orange-500', description: '–†—É—á–Ω–∞—è –º–æ–¥–µ—Ä–∞—Ü–∏—è' },
  rejected: { label: '‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ', color: 'bg-red-500', description: '–ù–µ –ø—Ä–æ—à–ª–æ –º–æ–¥–µ—Ä–∞—Ü–∏—é' },
  sold: { label: 'üéâ –ü—Ä–æ–¥–∞–Ω–æ', color: 'bg-blue-500', description: '–ê–≤—Ç–æ–º–æ–±–∏–ª—å –ø—Ä–æ–¥–∞–Ω' },
  archived: { label: 'üì¶ –ê—Ä—Ö–∏–≤', color: 'bg-gray-400', description: '–í –∞—Ä—Ö–∏–≤–µ' }
};

const MyAdsPage: React.FC = () => {
  const { formatDate: formatDateFunc } = useI18n();
  const [ads, setAds] = useState<CarAd[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [selectedStatus, setSelectedStatus] = useState<string>('all');
  const [page, setPage] = useState(1);
  const [totalAds, setTotalAds] = useState(0);

  // üìä –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å backend
  const loadAds = async (statusFilter = 'all', pageNum = 1) => {
    try {
      setLoading(true);
      setError(null);

      console.log('[MyAdsPage] üì§ Loading ads:', { status: statusFilter, page: pageNum });

      const params = new URLSearchParams({
        page: pageNum.toString(),
        page_size: '10'
      });

      if (statusFilter !== 'all') {
        params.append('status', statusFilter);
      }

      const response = await fetch(`/api/ads/my-ads?${params.toString()}`);
      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π');
      }

      if (result.success) {
        setAds(result.data || []);
        setTotalAds(result.total || 0);
        console.log('[MyAdsPage] ‚úÖ Ads loaded:', result.data?.length || 0);
      } else {
        throw new Error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      }

    } catch (error: any) {
      console.error('[MyAdsPage] ‚ùå Error loading ads:', error);
      setError(error.message);
      setAds([]);
    } finally {
      setLoading(false);
    }
  };

  // üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  const deleteAd = async (adId: number) => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ?')) {
      return;
    }

    try {
      console.log('[MyAdsPage] üóëÔ∏è Deleting ad:', adId);

      const response = await fetch(`/api/ads/my-ads?id=${adId}`, {
        method: 'DELETE'
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è');
      }

      if (result.success) {
        console.log('[MyAdsPage] ‚úÖ Ad deleted successfully');
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
        await loadAds(selectedStatus, page);
      } else {
        throw new Error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      }

    } catch (error: any) {
      console.error('[MyAdsPage] ‚ùå Error deleting ad:', error);
      alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`);
    }
  };

  // üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    loadAds(selectedStatus, page);
  }, [selectedStatus, page]);

  // üí∞ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
  const formatPrice = (price: number, currency: string) => {
    const symbols = { USD: '$', EUR: '‚Ç¨', UAH: '‚Ç¥' };
    return `${symbols[currency as keyof typeof symbols] || '$'}${price.toLocaleString()}`;
  };

  // üìÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  const formatDate = (dateString: string) => {
    return formatDateFunc(new Date(dateString), {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  // üé® –ö–∞—Ä—Ç–æ—á–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  const AdCard: React.FC<{ ad: CarAd }> = ({ ad }) => {
    const statusConfig = STATUS_CONFIG[ad.status];

    return (
      <Card className="hover:shadow-lg transition-shadow">
        <CardHeader>
          <div className="flex items-start justify-between">
            <div className="flex-1">
              <CardTitle className="text-lg line-clamp-2 mb-2">
                {ad.title}
              </CardTitle>
              <div className="flex items-center gap-4 text-sm text-gray-600">
                <span className="flex items-center gap-1">
                  <Car className="h-4 w-4" />
                  {ad.mark.name} {ad.model.name}
                </span>
                <span className="flex items-center gap-1">
                  <Calendar className="h-4 w-4" />
                  {ad.year}
                </span>
                <span className="flex items-center gap-1">
                  <MapPin className="h-4 w-4" />
                  {ad.city.name}
                </span>
              </div>
            </div>
            
            <Badge className={`${statusConfig.color} text-white ml-4`}>
              {statusConfig.label}
            </Badge>
          </div>
        </CardHeader>

        <CardContent>
          <div className="space-y-4">
            {/* üí∞ –¶–µ–Ω–∞ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
            <div className="flex items-center justify-between">
              <div className="text-2xl font-bold text-green-600">
                {formatPrice(ad.price, ad.currency)}
              </div>
              <div className="text-sm text-gray-600">
                {ad.mileage_km.toLocaleString()} –∫–º
              </div>
            </div>

            {/* üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ */}
            {ad.views_count !== undefined && (
              <div className="flex items-center gap-2 text-sm text-gray-600">
                <Eye className="h-4 w-4" />
                <span>{ad.views_count} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</span>
              </div>
            )}

            {/* ‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è */}
            {ad.status === 'rejected' && ad.moderation_reason && (
              <Alert variant="destructive">
                <AlertCircle className="h-4 w-4" />
                <AlertDescription>
                  <p className="font-medium">–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:</p>
                  <p className="text-sm">{ad.moderation_reason}</p>
                </AlertDescription>
              </Alert>
            )}

            {/* üìÖ –î–∞—Ç—ã */}
            <div className="text-xs text-gray-500 space-y-1">
              <div>–°–æ–∑–¥–∞–Ω–æ: {formatDate(ad.created_at)}</div>
              <div>–û–±–Ω–æ–≤–ª–µ–Ω–æ: {formatDate(ad.updated_at)}</div>
            </div>

            {/* üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className="flex items-center gap-4 pt-4 border-t">
              <div className="flex items-center gap-1 text-sm text-gray-600">
                <Eye className="h-4 w-4" />
                <span>{ad.view_count || 0}</span>
              </div>
              <div className="flex items-center gap-1 text-sm text-gray-600">
                <Heart className="h-4 w-4" />
                <span>{ad.favorites_count || 0}</span>
              </div>
              <div className="flex items-center gap-1 text-sm text-gray-600">
                <Phone className="h-4 w-4" />
                <span>{ad.phone_views_count || 0}</span>
              </div>

              {ad.status === 'active' && (
                <Button size="sm" variant="outline" className="ml-auto">
                  <BarChart3 className="h-4 w-4 mr-1" />
                  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                </Button>
              )}
            </div>
          </div>
        </CardContent>
      </Card>
    );
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-7xl mx-auto space-y-6">
        
        {/* üìã –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="bg-white rounded-lg shadow-sm p-6">
          <div className="flex items-center justify-between mb-6">
            <div>
              <h1 className="text-3xl font-bold text-gray-900 flex items-center gap-3">
                üöó –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
              </h1>
              <p className="text-gray-600 mt-2">
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –æ –ø—Ä–æ–¥–∞–∂–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
              </p>
            </div>
            
            <div className="flex items-center gap-4">
              <Button onClick={() => loadAds(selectedStatus, page)} disabled={loading}>
                <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />
                –û–±–Ω–æ–≤–∏—Ç—å
              </Button>
              
              <Button>
                <Plus className="h-4 w-4 mr-2" />
                –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
              </Button>
            </div>
          </div>

          {/* üéõÔ∏è –§–∏–ª—å—Ç—Ä—ã –ø–æ —Å—Ç–∞—Ç—É—Å—É */}
          <div className="flex flex-wrap gap-2">
            <Button
              variant={selectedStatus === 'all' ? 'default' : 'outline'}
              size="sm"
              onClick={() => setSelectedStatus('all')}
            >
              –í—Å–µ ({totalAds})
            </Button>
            
            {Object.entries(STATUS_CONFIG).map(([status, config]) => (
              <Button
                key={status}
                variant={selectedStatus === status ? 'default' : 'outline'}
                size="sm"
                onClick={() => setSelectedStatus(status)}
              >
                {config.label}
              </Button>
            ))}
          </div>
        </div>

        {/* ‚ùå –û—à–∏–±–∫–∞ */}
        {error && (
          <Alert variant="destructive">
            <AlertCircle className="h-4 w-4" />
            <AlertDescription>
              <p className="font-medium">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π</p>
              <p className="text-sm mt-1">{error}</p>
            </AlertDescription>
          </Alert>
        )}

        {/* ‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ */}
        {loading && (
          <div className="text-center py-12">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...</p>
          </div>
        )}

        {/* üìã –°–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π */}
        {!loading && !error && (
          <>
            {ads.length > 0 ? (
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {ads.map(ad => (
                  <AdCard key={ad.id} ad={ad} />
                ))}
              </div>
            ) : (
              <div className="text-center py-12">
                <Car className="h-16 w-16 text-gray-400 mx-auto mb-4" />
                <h3 className="text-xl font-semibold text-gray-900 mb-2">
                  –û–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
                </h3>
                <p className="text-gray-600 mb-6">
                  {selectedStatus === 'all' 
                    ? '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ!'
                    : `–ù–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "${STATUS_CONFIG[selectedStatus as keyof typeof STATUS_CONFIG]?.label}"`
                  }
                </p>
                <Button>
                  <Plus className="h-4 w-4 mr-2" />
                  –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                </Button>
              </div>
            )}

            {/* üìÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
            {ads.length > 0 && totalAds > 10 && (
              <div className="bg-white rounded-lg shadow-sm p-4">
                <div className="flex items-center justify-center gap-2">
                  <Button 
                    variant="outline" 
                    size="sm"
                    disabled={page === 1}
                    onClick={() => setPage(page - 1)}
                  >
                    –ü—Ä–µ–¥—ã–¥—É—â–∞—è
                  </Button>
                  
                  <span className="px-4 py-2 text-sm">
                    –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page} –∏–∑ {Math.ceil(totalAds / 10)}
                  </span>
                  
                  <Button 
                    variant="outline" 
                    size="sm"
                    disabled={page >= Math.ceil(totalAds / 10)}
                    onClick={() => setPage(page + 1)}
                  >
                    –°–ª–µ–¥—É—é—â–∞—è
                  </Button>
                </div>
              </div>
            )}
          </>
        )}
      </div>
    </div>
  );
};

export default MyAdsPage;
