"use client";

import React, { useState } from 'react';
import { useRouter } from 'next/navigation';

import { CarAdFormData } from '@/types/autoria';
import { useI18n } from '@/contexts/I18nContext';
import { CarAdsService } from '@/services/autoria/carAds.service';
import CarAdForm from '@/components/AutoRia/Components/CarAdForm';
import { mapFormDataToApiData } from '@/utils/carAdDataMapper';
import { useToast } from '@/hooks/use-toast';

const CreateAdPage: React.FC = () => {
  const { t } = useI18n();
  const router = useRouter();
  const { toast } = useToast();

  console.log('CreateAdPage rendered');

  const [isSubmitting, setIsSubmitting] = useState(false);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (formData: Partial<CarAdFormData>) => {
    setIsSubmitting(true);
    try {
      console.log('[CreateAdPage] üîÑ Creating new ad');
      console.log('[CreateAdPage] üìù Form data keys:', Object.keys(formData));

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç API
      const apiData = mapFormDataToApiData(formData);
      console.log('[CreateAdPage] üîÑ Mapped API data keys:', Object.keys(apiData));

      const response = await CarAdsService.createCarAd(apiData);
      console.log('[CreateAdPage] ‚úÖ Ad created successfully:', response);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      toast({
        title: "‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ",
        description: "–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ",
      });

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—ä—è–≤–ª–µ–Ω–∏–π
      router.push('/autoria/my-ads');

    } catch (error) {
      console.error('[CreateAdPage] ‚ùå Error creating ad:', error);
      toast({
        title: "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è",
        description: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
        variant: "destructive",
      });
      throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ CarAdForm
    } finally {
      setIsSubmitting(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
  const handleCancel = () => {
    router.push('/autoria/search');
  };

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç CarAdForm
  return (
    <CarAdForm
      mode="create"
      initialData={{}}
      onSubmit={handleSubmit}
      onCancel={handleCancel}
      isLoading={isSubmitting}
    />
  );
};

export default CreateAdPage;
