import { NextRequest, NextResponse } from 'next/server';

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∏–ø–æ–≤ –∫—É–∑–æ–≤–∞
const BODY_TYPES = [
  { id: 'SEDAN', name: '–°–µ–¥–∞–Ω' },
  { id: 'HATCHBACK', name: '–•—ç—Ç—á–±–µ–∫' },
  { id: 'WAGON', name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª' },
  { id: 'SUV', name: '–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫' },
  { id: 'COUPE', name: '–ö—É–ø–µ' },
  { id: 'CONVERTIBLE', name: '–ö–∞–±—Ä–∏–æ–ª–µ—Ç' },
  { id: 'PICKUP', name: '–ü–∏–∫–∞–ø' },
  { id: 'VAN', name: '–§—É—Ä–≥–æ–Ω' },
  { id: 'MINIVAN', name: '–ú–∏–Ω–∏–≤—ç–Ω' },
  { id: 'CROSSOVER', name: '–ö—Ä–æ—Å—Å–æ–≤–µ—Ä' },
  { id: 'LIMOUSINE', name: '–õ–∏–º—É–∑–∏–Ω' },
  { id: 'OTHER', name: '–î—Ä—É–≥–æ–µ' }
];

export async function GET(request: NextRequest) {
  console.log('[Body Types API] üöó GET request received!');
  const searchParams = new URL(request.url).searchParams;
  const pageSize = parseInt(searchParams.get('page_size') || '50', 10);

  console.log(`[Body Types API] Returning ${BODY_TYPES.length} body types (page_size: ${pageSize})`);

  return NextResponse.json({
    results: BODY_TYPES.slice(0, pageSize),
    count: BODY_TYPES.length,
    next: null,
    previous: null
  });
}

