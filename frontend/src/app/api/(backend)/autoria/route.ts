import { NextRequest, NextResponse } from 'next/server';
import { getAuthorizationHeaders } from '@/common/constants/headers';

/**
 * API Proxy –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
 * –ü—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ Django backend
 */

const BACKEND_URL = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:8000';

export async function POST(request: NextRequest) {
  try {
    console.log('üöó AUTORIA API PROXY: POST request received!');
    console.log('üöó AUTORIA API: Creating car ad...');

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const body = await request.json();
    console.log('üìã AUTORIA API: Request body:', JSON.stringify(body, null, 2));

    // –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ Django backend
    const backendUrl = `${BACKEND_URL}/api/ads/cars/create`;
    console.log('üîó AUTORIA API: Proxying to:', backendUrl);

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const authHeaders = await getAuthorizationHeaders();
    console.log('üîê AUTORIA API: Auth headers:', Object.keys(authHeaders));

    // –î–æ–±–∞–≤–ª—è–µ–º account_id –∫ –¥–∞–Ω–Ω—ã–º (–≤—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ID)
    // TODO: –ü–æ–ª—É—á–∞—Ç—å account_id –∏–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const bodyWithAccount = {
      ...body,
      account: 1 // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º ID 1
    };

    console.log('üìã AUTORIA API: Final request body:', JSON.stringify(bodyWithAccount, null, 2));

    const response = await fetch(backendUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        ...authHeaders
      },
      body: JSON.stringify(bodyWithAccount)
    });

    console.log('üìä AUTORIA API: Backend response status:', response.status);

    if (!response.ok) {
      const errorText = await response.text();
      console.error('‚ùå AUTORIA API: Backend error:', errorText);

      return NextResponse.json(
        {
          error: 'Failed to create car ad',
          details: errorText,
          status: response.status
        },
        { status: response.status }
      );
    }

    const result = await response.json();
    console.log('‚úÖ AUTORIA API: Success!', result);

    return NextResponse.json(result);
    
  } catch (error) {
    console.error('‚ùå AUTORIA API: Error:', error);
    
    return NextResponse.json(
      {
        error: 'Internal server error',
        message: error instanceof Error ? error.message : 'Unknown error'
      },
      { status: 500 }
    );
  }
}

export async function GET() {
  return NextResponse.json({
    message: 'Autoria API Proxy',
    endpoints: {
      'POST /api/autoria/': 'Create car ad',
      'POST /api/autoria/test-ads/generate': 'Generate test ads',
      'POST /api/autoria/test-ads/debug': 'Debug endpoint'
    }
  });
}
