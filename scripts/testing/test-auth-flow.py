#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ flow –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Level 1 (NextAuth) + Level 2 (Backend tokens)
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
FRONTEND_URL = "http://localhost:3000"
BACKEND_URL = "http://localhost:8000"
TEST_EMAIL = "pvs.versia@gmail.com"
TEST_PASSWORD = "12345678"

def test_backend_auth():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç backend –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é"""
    print("üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º backend –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º login endpoint
        login_url = f"{BACKEND_URL}/api/auth/login"
        login_data = {
            "email": TEST_EMAIL,
            "password": TEST_PASSWORD
        }
        
        print(f"üì° POST {login_url}")
        print(f"üìù Data: {login_data}")
        
        response = requests.post(
            login_url,
            json=login_data,
            headers={"Content-Type": "application/json"},
            timeout=10
        )
        
        print(f"üìä Status: {response.status_code}")
        print(f"üìÑ Response: {response.text[:200]}...")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Backend –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"üîë Access token: {data.get('access', 'N/A')[:50]}...")
            print(f"üîÑ Refresh token: {data.get('refresh', 'N/A')[:50]}...")
            return True
        else:
            print(f"‚ùå Backend –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ—É–¥–∞—á–Ω–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ backend –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return False

def test_frontend_redis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Redis API frontend"""
    print("\nüì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º Redis API...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis API
        redis_url = f"{FRONTEND_URL}/api/redis?key=backend_auth"
        
        print(f"üì° GET {redis_url}")
        
        response = requests.get(redis_url, timeout=10)
        
        print(f"üìä Status: {response.status_code}")
        print(f"üìÑ Response: {response.text[:200]}...")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('exists'):
                print("‚úÖ Backend —Ç–æ–∫–µ–Ω—ã –Ω–∞–π–¥–µ–Ω—ã –≤ Redis!")
                return True
            else:
                print("‚ùå Backend —Ç–æ–∫–µ–Ω—ã –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ Redis")
                return False
        else:
            print(f"‚ùå Redis API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Redis API: {e}")
        return False

def test_frontend_auth_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç frontend auth API"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º frontend auth API...")

    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π frontend auth endpoint
        auth_url = f"{FRONTEND_URL}/api/auth/login"
        auth_data = {
            "email": TEST_EMAIL,
            "password": TEST_PASSWORD
        }
        
        print(f"üì° POST {auth_url}")
        print(f"üìù Data: {auth_data}")
        
        response = requests.post(
            auth_url,
            json=auth_data,
            headers={"Content-Type": "application/json"},
            timeout=15
        )
        
        print(f"üìä Status: {response.status_code}")
        print(f"üìÑ Response: {response.text[:300]}...")
        
        if response.status_code == 200:
            print("‚úÖ Frontend –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            return True
        else:
            print(f"‚ùå Frontend –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ—É–¥–∞—á–Ω–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ frontend –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò")
    print("=" * 50)
    print(f"üë§ Email: {TEST_EMAIL}")
    print(f"üîë Password: {'*' * len(TEST_PASSWORD)}")
    print(f"üåê Frontend: {FRONTEND_URL}")
    print(f"üîß Backend: {BACKEND_URL}")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: Backend API
    backend_ok = test_backend_auth()
    
    # –¢–µ—Å—Ç 2: Frontend Auth API
    frontend_ok = test_frontend_auth_api()
    
    # –¢–µ—Å—Ç 3: Redis –ø—Ä–æ–≤–µ—Ä–∫–∞
    redis_ok = test_frontend_redis()
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"üîß Backend API: {'‚úÖ OK' if backend_ok else '‚ùå FAIL'}")
    print(f"üåê Frontend Auth: {'‚úÖ OK' if frontend_ok else '‚ùå FAIL'}")
    print(f"üì¶ Redis Tokens: {'‚úÖ OK' if redis_ok else '‚ùå FAIL'}")
    
    if all([backend_ok, frontend_ok, redis_ok]):
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üí° –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ï–ô")
        print("üí° –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º")

if __name__ == "__main__":
    main()
