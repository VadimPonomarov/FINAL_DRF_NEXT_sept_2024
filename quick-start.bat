@echo off
REM =============================================================================
REM QUICK START - –ó–ê–ü–£–°–ö –ü–†–û–ï–ö–¢–ê –û–î–ù–û–ô –ö–û–ú–ê–ù–î–û–ô (Windows)
REM =============================================================================
REM –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç
REM –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ - –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
REM =============================================================================

echo.
echo ========================================
echo   AUTO RIA - QUICK START
echo ========================================
echo.

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo [1/3] –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!
    echo.
    echo –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop:
    echo https://www.docker.com/products/docker-desktop/
    pause
    exit /b 1
)
echo ‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
docker-compose --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!
    pause
    exit /b 1
)
echo ‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω

echo.
echo [2/3] –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–∏—Å–æ–≤ (Docker)...
echo.
docker-compose up -d

if %errorlevel% neq 0 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Docker Compose
    pause
    exit /b 1
)

echo.
echo ‚úÖ Backend —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!
echo.
echo [3/3] –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î (30 —Å–µ–∫)...
timeout /t 30 /nobreak >nul

echo.
echo ========================================
echo   ‚úÖ –ü–†–û–ï–ö–¢ –ó–ê–ü–£–©–ï–ù!
echo ========================================
echo.
echo üåê Frontend: http://localhost:3000
echo üîß Backend API: http://localhost:8000
echo üìö API Docs: http://localhost:8000/swagger/
echo üî¥ Redis: localhost:6379
echo üêò PostgreSQL: localhost:5432
echo.
echo üéì –¢–ï–°–¢–û–í–´–ï –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï:
echo    Email: admin@autoria.com
echo    Password: 12345678
echo    Role: Superuser
echo.
echo    Email: seller1@gmail.com  
echo    Password: 12345678
echo    Role: Seller
echo.
echo ========================================
echo   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C
echo ========================================
echo.

REM –ó–∞–ø—É—Å–∫ frontend (–µ—Å–ª–∏ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
where node >nul 2>&1
if %errorlevel% equ 0 (
    echo [–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ] –ó–∞–ø—É—Å–∫ frontend...
    cd frontend
    if not exist "node_modules" (
        echo –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...
        call npm install
    )
    echo.
    echo –ó–∞–ø—É—Å–∫ Next.js dev server...
    start cmd /k "npm run dev"
    cd ..
) else (
    echo.
    echo ‚ö†Ô∏è  Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    echo.
    echo –î–ª—è –∑–∞–ø—É—Å–∫–∞ frontend –≤—Ä—É—á–Ω—É—é:
    echo   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js: https://nodejs.org/
    echo   2. cd frontend
    echo   3. npm install
    echo   4. npm run dev
    echo.
)

echo.
echo –õ–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:
docker-compose logs -f

pause

